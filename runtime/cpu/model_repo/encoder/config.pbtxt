# Copyright (c) 2021, NVIDIA CORPORATION.  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# 编码,attention_rescoring和特征提取需要进行修改，特征提取的输出要获取chunk,offset,att_cache,cnn_cache四个选项

name: "encoder"
backend: "onnxruntime"
default_model_filename: "encoder.onnx"

# default_input不知道能不能作为输入代码,不行应该，需要修改导出脚本和offset

max_batch_size: 0
input [
 {
    name: "chunk"
    data_type: TYPE_FP32
    dims: [1, -1, 80]  #batch,decoding_window,feature_size
  },
  #{
  #  name: "offset"
  #  data_type: TYPE_INT64
  #  dims: [ ]           # offset,这里要进行修改，因为非批次的不支持reshape，要对export_onnx_cpu动手，不仅是改输入，还要改输入对数据的影响
  #  #reshape: {shape: [ ]}
  #},
  {
    name: "att_cache"
    data_type: TYPE_FP32
    dims: [12, 4, -1, 128] #args['num_blocks'], args['head'], required_cache_size,
                          #args['output_size'] // args['head'] * 2
  },
  {
    name: "cnn_cache"
    data_type: TYPE_FP32
    dims: [12, 1, 256, 7]
    # args['num_blocks'], args['batch'], args['output_size'],
    # args['cnn_module_kernel'] - 1
  }
]

output [
  {
    name: "output"
    data_type: TYPE_FP32
    dims: [-1, -1, 256]   # [batch, time_steps, feature_size]
  }
  #{
  #  name: "r_att_cache"
  #  data_type: TYPE_FP32
  #  dims: [12, 4, -1, 128] # 第二个是浮动维度，时间的缓存步数，但是前面这四个不知道是什么
  #},
  #{
  #  name: "r_cnn_cache"
  #  data_type: TYPE_FP32
  #  dims: [12, 1, 256, -1]
  #}
]




instance_group [
    {
      count: 2
      kind: KIND_CPU
    }
]

