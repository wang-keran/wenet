# Copyright (c) 2021, NVIDIA CORPORATION.  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# 解码器

name: "decoder"
backend: "onnxruntime"
default_model_filename: "decoder.onnx"

max_batch_size: 640
input [
  {
    name: "hyps"              # (NBEST, L)
    data_type: TYPE_INT64     # NBEST：候选假设的数量，硬编码为10。
    format: FORMAT_NONE       # L：每个假设的最大长度，硬编码为20。
    dims: [ 0, 0 ]
  },
  {
    name: "hyps_lens"         # (NBEST)：候选假设的数量，硬编码为10。
    data_type: TYPE_INT64
    format: FORMAT_NONE
    dims: [ 0 ]
  },
  {
    name: "encoder_out"     # encoder中的output输出，(batch, T, output_size)
    data_type: TYPE_FP32    # batch：批次大小，默认为1。
    format: FORMAT_NONE     # T：时间步长（即每个音频片段的长度），硬编码为200。
    dims: [ 1, 0, 256 ]     # output_size：编码器输出的特征维度，通常是从配置文件中读取的 args['output_size']。
  }
]

output [
  {
    name: "score"           # （total,NBEST, L） total:批次大小
    data_type: TYPE_FP32    # NBEST：候选假设的数量，硬编码为10。
    dims: [ 0, 0, 4233 ]    # L：每个假设的最大长度，硬编码为20。
  },
  {
    name: "r_score"        #  （total,NBEST, L）total:批次大小
    data_type: TYPE_FP32   # NBEST：候选假设的数量，硬编码为10。
    dims: [ 0, 0, 4233 ]   # L：每个假设的最大长度，硬编码为20。
  }
]

dynamic_batching {
    preferred_batch_size: [ 16, 32 ]    # 这里是动态维度默认先尝试16，然后尝试32的意思
  }

instance_group [
    {
      count: 2
      kind: KIND_CPU
    }
]

